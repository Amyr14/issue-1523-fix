// A module that contains value definitions.
// Since 'val' gives us the simplest way of defining expressions,
// we also do extensive testing of expression syntax in this test.
module withVals {
    val S = set(1)
	// Pass a lambda operator as a second argument of filter.
	// Here we are using the infix notation.
	val oper_app = S filter (x -> x > 10)
    // We can omit parentheses, though this form is harder to read.
	val oper_app2 = S filter x -> x > 10
    // Some operators accept action lambdas
	action oper_app3 = S guess { x -> x > 10 }
}
