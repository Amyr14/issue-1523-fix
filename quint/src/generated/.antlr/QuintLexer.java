// Generated from /home/gabriela/projects/quint/quint/src/generated/Quint.g4 by ANTLR 4.9.2
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class QuintLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.9.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		STRING=39, BOOL=40, INT=41, AND=42, OR=43, IFF=44, IMPLIES=45, SET=46, 
		LIST=47, MAP=48, MATCH=49, PLUS=50, MINUS=51, MUL=52, DIV=53, MOD=54, 
		GT=55, LT=56, GE=57, LE=58, NE=59, EQ=60, ASGN=61, LPAREN=62, RPAREN=63, 
		IDENTIFIER=64, SIMPLE_IDENTIFIER=65, DOCCOMMENT=66, LINE_COMMENT=67, COMMENT=68, 
		WS=69;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
			"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
			"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
			"T__33", "T__34", "T__35", "T__36", "T__37", "STRING", "BOOL", "INT", 
			"AND", "OR", "IFF", "IMPLIES", "SET", "LIST", "MAP", "MATCH", "PLUS", 
			"MINUS", "MUL", "DIV", "MOD", "GT", "LT", "GE", "LE", "NE", "EQ", "ASGN", 
			"LPAREN", "RPAREN", "IDENTIFIER", "SIMPLE_IDENTIFIER", "DOCCOMMENT", 
			"LINE_COMMENT", "COMMENT", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'module'", "'{'", "'}'", "'const'", "':'", "'var'", "'assume'", 
			"'type'", "','", "';'", "'nondet'", "'val'", "'def'", "'pure'", "'action'", 
			"'run'", "'temporal'", "'import'", "'.'", "'from'", "'as'", "'export'", 
			"'->'", "'=>'", "'['", "']'", "'int'", "'str'", "'bool'", "'|'", "'^'", 
			"'''", "'all'", "'any'", "'if'", "'else'", "'_'", "'...'", null, null, 
			null, "'and'", "'or'", "'iff'", "'implies'", "'Set'", "'List'", "'Map'", 
			"'match'", "'+'", "'-'", "'*'", "'/'", "'%'", "'>'", "'<'", "'>='", "'<='", 
			"'!='", "'=='", "'='", "'('", "')'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, "STRING", "BOOL", "INT", "AND", "OR", "IFF", "IMPLIES", 
			"SET", "LIST", "MAP", "MATCH", "PLUS", "MINUS", "MUL", "DIV", "MOD", 
			"GT", "LT", "GE", "LE", "NE", "EQ", "ASGN", "LPAREN", "RPAREN", "IDENTIFIER", 
			"SIMPLE_IDENTIFIER", "DOCCOMMENT", "LINE_COMMENT", "COMMENT", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public QuintLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Quint.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2G\u01df\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\3\2\3\2\3\2\3\2"+
		"\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\7\3\7\3"+
		"\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\13\3"+
		"\13\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3"+
		"\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3"+
		"\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3"+
		"\23\3\23\3\23\3\23\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3"+
		"\27\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31\3\32\3"+
		"\32\3\33\3\33\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3"+
		"\36\3\36\3\37\3\37\3 \3 \3!\3!\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3$\3$\3$\3"+
		"%\3%\3%\3%\3%\3&\3&\3\'\3\'\3\'\3\'\3(\3(\7(\u012a\n(\f(\16(\u012d\13"+
		"(\3(\3(\3)\3)\3)\3)\3)\3)\3)\3)\3)\5)\u013a\n)\3*\3*\3*\3*\3*\7*\u0141"+
		"\n*\f*\16*\u0144\13*\3*\3*\3*\3*\3*\3*\3*\7*\u014d\n*\f*\16*\u0150\13"+
		"*\5*\u0152\n*\3+\3+\3+\3+\3,\3,\3,\3-\3-\3-\3-\3.\3.\3.\3.\3.\3.\3.\3"+
		".\3/\3/\3/\3/\3\60\3\60\3\60\3\60\3\60\3\61\3\61\3\61\3\61\3\62\3\62\3"+
		"\62\3\62\3\62\3\62\3\63\3\63\3\64\3\64\3\65\3\65\3\66\3\66\3\67\3\67\3"+
		"8\38\39\39\3:\3:\3:\3;\3;\3;\3<\3<\3<\3=\3=\3=\3>\3>\3?\3?\3@\3@\3A\3"+
		"A\3A\3A\3A\3A\3A\5A\u01a1\nA\3B\3B\7B\u01a5\nB\fB\16B\u01a8\13B\3B\3B"+
		"\6B\u01ac\nB\rB\16B\u01ad\5B\u01b0\nB\3C\3C\3C\3C\3C\7C\u01b7\nC\fC\16"+
		"C\u01ba\13C\3C\3C\3D\3D\3D\3D\7D\u01c2\nD\fD\16D\u01c5\13D\3D\3D\3D\3"+
		"D\3E\3E\3E\3E\7E\u01cf\nE\fE\16E\u01d2\13E\3E\3E\3E\3E\3E\3F\6F\u01da"+
		"\nF\rF\16F\u01db\3F\3F\6\u012b\u01b8\u01c3\u01d0\2G\3\3\5\4\7\5\t\6\13"+
		"\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'"+
		"\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'"+
		"M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w=y>{?}@\177"+
		"A\u0081B\u0083C\u0085D\u0087E\u0089F\u008bG\3\2\t\3\2\63;\3\2\62;\5\2"+
		"\62;CHch\4\2C\\c|\6\2\62;C\\aac|\3\2aa\5\2\13\f\17\17\"\"\2\u01ee\2\3"+
		"\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2"+
		"\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31"+
		"\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2"+
		"\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2"+
		"\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2"+
		"\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2"+
		"I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3"+
		"\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2"+
		"\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2"+
		"o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3"+
		"\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085"+
		"\3\2\2\2\2\u0087\3\2\2\2\2\u0089\3\2\2\2\2\u008b\3\2\2\2\3\u008d\3\2\2"+
		"\2\5\u0094\3\2\2\2\7\u0096\3\2\2\2\t\u0098\3\2\2\2\13\u009e\3\2\2\2\r"+
		"\u00a0\3\2\2\2\17\u00a4\3\2\2\2\21\u00ab\3\2\2\2\23\u00b0\3\2\2\2\25\u00b2"+
		"\3\2\2\2\27\u00b4\3\2\2\2\31\u00bb\3\2\2\2\33\u00bf\3\2\2\2\35\u00c3\3"+
		"\2\2\2\37\u00c8\3\2\2\2!\u00cf\3\2\2\2#\u00d3\3\2\2\2%\u00dc\3\2\2\2\'"+
		"\u00e3\3\2\2\2)\u00e5\3\2\2\2+\u00ea\3\2\2\2-\u00ed\3\2\2\2/\u00f4\3\2"+
		"\2\2\61\u00f7\3\2\2\2\63\u00fa\3\2\2\2\65\u00fc\3\2\2\2\67\u00fe\3\2\2"+
		"\29\u0102\3\2\2\2;\u0106\3\2\2\2=\u010b\3\2\2\2?\u010d\3\2\2\2A\u010f"+
		"\3\2\2\2C\u0111\3\2\2\2E\u0115\3\2\2\2G\u0119\3\2\2\2I\u011c\3\2\2\2K"+
		"\u0121\3\2\2\2M\u0123\3\2\2\2O\u0127\3\2\2\2Q\u0139\3\2\2\2S\u0151\3\2"+
		"\2\2U\u0153\3\2\2\2W\u0157\3\2\2\2Y\u015a\3\2\2\2[\u015e\3\2\2\2]\u0166"+
		"\3\2\2\2_\u016a\3\2\2\2a\u016f\3\2\2\2c\u0173\3\2\2\2e\u0179\3\2\2\2g"+
		"\u017b\3\2\2\2i\u017d\3\2\2\2k\u017f\3\2\2\2m\u0181\3\2\2\2o\u0183\3\2"+
		"\2\2q\u0185\3\2\2\2s\u0187\3\2\2\2u\u018a\3\2\2\2w\u018d\3\2\2\2y\u0190"+
		"\3\2\2\2{\u0193\3\2\2\2}\u0195\3\2\2\2\177\u0197\3\2\2\2\u0081\u01a0\3"+
		"\2\2\2\u0083\u01af\3\2\2\2\u0085\u01b1\3\2\2\2\u0087\u01bd\3\2\2\2\u0089"+
		"\u01ca\3\2\2\2\u008b\u01d9\3\2\2\2\u008d\u008e\7o\2\2\u008e\u008f\7q\2"+
		"\2\u008f\u0090\7f\2\2\u0090\u0091\7w\2\2\u0091\u0092\7n\2\2\u0092\u0093"+
		"\7g\2\2\u0093\4\3\2\2\2\u0094\u0095\7}\2\2\u0095\6\3\2\2\2\u0096\u0097"+
		"\7\177\2\2\u0097\b\3\2\2\2\u0098\u0099\7e\2\2\u0099\u009a\7q\2\2\u009a"+
		"\u009b\7p\2\2\u009b\u009c\7u\2\2\u009c\u009d\7v\2\2\u009d\n\3\2\2\2\u009e"+
		"\u009f\7<\2\2\u009f\f\3\2\2\2\u00a0\u00a1\7x\2\2\u00a1\u00a2\7c\2\2\u00a2"+
		"\u00a3\7t\2\2\u00a3\16\3\2\2\2\u00a4\u00a5\7c\2\2\u00a5\u00a6\7u\2\2\u00a6"+
		"\u00a7\7u\2\2\u00a7\u00a8\7w\2\2\u00a8\u00a9\7o\2\2\u00a9\u00aa\7g\2\2"+
		"\u00aa\20\3\2\2\2\u00ab\u00ac\7v\2\2\u00ac\u00ad\7{\2\2\u00ad\u00ae\7"+
		"r\2\2\u00ae\u00af\7g\2\2\u00af\22\3\2\2\2\u00b0\u00b1\7.\2\2\u00b1\24"+
		"\3\2\2\2\u00b2\u00b3\7=\2\2\u00b3\26\3\2\2\2\u00b4\u00b5\7p\2\2\u00b5"+
		"\u00b6\7q\2\2\u00b6\u00b7\7p\2\2\u00b7\u00b8\7f\2\2\u00b8\u00b9\7g\2\2"+
		"\u00b9\u00ba\7v\2\2\u00ba\30\3\2\2\2\u00bb\u00bc\7x\2\2\u00bc\u00bd\7"+
		"c\2\2\u00bd\u00be\7n\2\2\u00be\32\3\2\2\2\u00bf\u00c0\7f\2\2\u00c0\u00c1"+
		"\7g\2\2\u00c1\u00c2\7h\2\2\u00c2\34\3\2\2\2\u00c3\u00c4\7r\2\2\u00c4\u00c5"+
		"\7w\2\2\u00c5\u00c6\7t\2\2\u00c6\u00c7\7g\2\2\u00c7\36\3\2\2\2\u00c8\u00c9"+
		"\7c\2\2\u00c9\u00ca\7e\2\2\u00ca\u00cb\7v\2\2\u00cb\u00cc\7k\2\2\u00cc"+
		"\u00cd\7q\2\2\u00cd\u00ce\7p\2\2\u00ce \3\2\2\2\u00cf\u00d0\7t\2\2\u00d0"+
		"\u00d1\7w\2\2\u00d1\u00d2\7p\2\2\u00d2\"\3\2\2\2\u00d3\u00d4\7v\2\2\u00d4"+
		"\u00d5\7g\2\2\u00d5\u00d6\7o\2\2\u00d6\u00d7\7r\2\2\u00d7\u00d8\7q\2\2"+
		"\u00d8\u00d9\7t\2\2\u00d9\u00da\7c\2\2\u00da\u00db\7n\2\2\u00db$\3\2\2"+
		"\2\u00dc\u00dd\7k\2\2\u00dd\u00de\7o\2\2\u00de\u00df\7r\2\2\u00df\u00e0"+
		"\7q\2\2\u00e0\u00e1\7t\2\2\u00e1\u00e2\7v\2\2\u00e2&\3\2\2\2\u00e3\u00e4"+
		"\7\60\2\2\u00e4(\3\2\2\2\u00e5\u00e6\7h\2\2\u00e6\u00e7\7t\2\2\u00e7\u00e8"+
		"\7q\2\2\u00e8\u00e9\7o\2\2\u00e9*\3\2\2\2\u00ea\u00eb\7c\2\2\u00eb\u00ec"+
		"\7u\2\2\u00ec,\3\2\2\2\u00ed\u00ee\7g\2\2\u00ee\u00ef\7z\2\2\u00ef\u00f0"+
		"\7r\2\2\u00f0\u00f1\7q\2\2\u00f1\u00f2\7t\2\2\u00f2\u00f3\7v\2\2\u00f3"+
		".\3\2\2\2\u00f4\u00f5\7/\2\2\u00f5\u00f6\7@\2\2\u00f6\60\3\2\2\2\u00f7"+
		"\u00f8\7?\2\2\u00f8\u00f9\7@\2\2\u00f9\62\3\2\2\2\u00fa\u00fb\7]\2\2\u00fb"+
		"\64\3\2\2\2\u00fc\u00fd\7_\2\2\u00fd\66\3\2\2\2\u00fe\u00ff\7k\2\2\u00ff"+
		"\u0100\7p\2\2\u0100\u0101\7v\2\2\u01018\3\2\2\2\u0102\u0103\7u\2\2\u0103"+
		"\u0104\7v\2\2\u0104\u0105\7t\2\2\u0105:\3\2\2\2\u0106\u0107\7d\2\2\u0107"+
		"\u0108\7q\2\2\u0108\u0109\7q\2\2\u0109\u010a\7n\2\2\u010a<\3\2\2\2\u010b"+
		"\u010c\7~\2\2\u010c>\3\2\2\2\u010d\u010e\7`\2\2\u010e@\3\2\2\2\u010f\u0110"+
		"\7)\2\2\u0110B\3\2\2\2\u0111\u0112\7c\2\2\u0112\u0113\7n\2\2\u0113\u0114"+
		"\7n\2\2\u0114D\3\2\2\2\u0115\u0116\7c\2\2\u0116\u0117\7p\2\2\u0117\u0118"+
		"\7{\2\2\u0118F\3\2\2\2\u0119\u011a\7k\2\2\u011a\u011b\7h\2\2\u011bH\3"+
		"\2\2\2\u011c\u011d\7g\2\2\u011d\u011e\7n\2\2\u011e\u011f\7u\2\2\u011f"+
		"\u0120\7g\2\2\u0120J\3\2\2\2\u0121\u0122\7a\2\2\u0122L\3\2\2\2\u0123\u0124"+
		"\7\60\2\2\u0124\u0125\7\60\2\2\u0125\u0126\7\60\2\2\u0126N\3\2\2\2\u0127"+
		"\u012b\7$\2\2\u0128\u012a\13\2\2\2\u0129\u0128\3\2\2\2\u012a\u012d\3\2"+
		"\2\2\u012b\u012c\3\2\2\2\u012b\u0129\3\2\2\2\u012c\u012e\3\2\2\2\u012d"+
		"\u012b\3\2\2\2\u012e\u012f\7$\2\2\u012fP\3\2\2\2\u0130\u0131\7h\2\2\u0131"+
		"\u0132\7c\2\2\u0132\u0133\7n\2\2\u0133\u0134\7u\2\2\u0134\u013a\7g\2\2"+
		"\u0135\u0136\7v\2\2\u0136\u0137\7t\2\2\u0137\u0138\7w\2\2\u0138\u013a"+
		"\7g\2\2\u0139\u0130\3\2\2\2\u0139\u0135\3\2\2\2\u013aR\3\2\2\2\u013b\u0152"+
		"\7\62\2\2\u013c\u0142\t\2\2\2\u013d\u0141\t\3\2\2\u013e\u013f\7a\2\2\u013f"+
		"\u0141\t\3\2\2\u0140\u013d\3\2\2\2\u0140\u013e\3\2\2\2\u0141\u0144\3\2"+
		"\2\2\u0142\u0140\3\2\2\2\u0142\u0143\3\2\2\2\u0143\u0152\3\2\2\2\u0144"+
		"\u0142\3\2\2\2\u0145\u0146\7\62\2\2\u0146\u0147\7z\2\2\u0147\u0148\3\2"+
		"\2\2\u0148\u014e\t\4\2\2\u0149\u014d\t\4\2\2\u014a\u014b\7a\2\2\u014b"+
		"\u014d\t\4\2\2\u014c\u0149\3\2\2\2\u014c\u014a\3\2\2\2\u014d\u0150\3\2"+
		"\2\2\u014e\u014c\3\2\2\2\u014e\u014f\3\2\2\2\u014f\u0152\3\2\2\2\u0150"+
		"\u014e\3\2\2\2\u0151\u013b\3\2\2\2\u0151\u013c\3\2\2\2\u0151\u0145\3\2"+
		"\2\2\u0152T\3\2\2\2\u0153\u0154\7c\2\2\u0154\u0155\7p\2\2\u0155\u0156"+
		"\7f\2\2\u0156V\3\2\2\2\u0157\u0158\7q\2\2\u0158\u0159\7t\2\2\u0159X\3"+
		"\2\2\2\u015a\u015b\7k\2\2\u015b\u015c\7h\2\2\u015c\u015d\7h\2\2\u015d"+
		"Z\3\2\2\2\u015e\u015f\7k\2\2\u015f\u0160\7o\2\2\u0160\u0161\7r\2\2\u0161"+
		"\u0162\7n\2\2\u0162\u0163\7k\2\2\u0163\u0164\7g\2\2\u0164\u0165\7u\2\2"+
		"\u0165\\\3\2\2\2\u0166\u0167\7U\2\2\u0167\u0168\7g\2\2\u0168\u0169\7v"+
		"\2\2\u0169^\3\2\2\2\u016a\u016b\7N\2\2\u016b\u016c\7k\2\2\u016c\u016d"+
		"\7u\2\2\u016d\u016e\7v\2\2\u016e`\3\2\2\2\u016f\u0170\7O\2\2\u0170\u0171"+
		"\7c\2\2\u0171\u0172\7r\2\2\u0172b\3\2\2\2\u0173\u0174\7o\2\2\u0174\u0175"+
		"\7c\2\2\u0175\u0176\7v\2\2\u0176\u0177\7e\2\2\u0177\u0178\7j\2\2\u0178"+
		"d\3\2\2\2\u0179\u017a\7-\2\2\u017af\3\2\2\2\u017b\u017c\7/\2\2\u017ch"+
		"\3\2\2\2\u017d\u017e\7,\2\2\u017ej\3\2\2\2\u017f\u0180\7\61\2\2\u0180"+
		"l\3\2\2\2\u0181\u0182\7\'\2\2\u0182n\3\2\2\2\u0183\u0184\7@\2\2\u0184"+
		"p\3\2\2\2\u0185\u0186\7>\2\2\u0186r\3\2\2\2\u0187\u0188\7@\2\2\u0188\u0189"+
		"\7?\2\2\u0189t\3\2\2\2\u018a\u018b\7>\2\2\u018b\u018c\7?\2\2\u018cv\3"+
		"\2\2\2\u018d\u018e\7#\2\2\u018e\u018f\7?\2\2\u018fx\3\2\2\2\u0190\u0191"+
		"\7?\2\2\u0191\u0192\7?\2\2\u0192z\3\2\2\2\u0193\u0194\7?\2\2\u0194|\3"+
		"\2\2\2\u0195\u0196\7*\2\2\u0196~\3\2\2\2\u0197\u0198\7+\2\2\u0198\u0080"+
		"\3\2\2\2\u0199\u01a1\5\u0083B\2\u019a\u019b\5\u0083B\2\u019b\u019c\7<"+
		"\2\2\u019c\u019d\7<\2\2\u019d\u019e\3\2\2\2\u019e\u019f\5\u0081A\2\u019f"+
		"\u01a1\3\2\2\2\u01a0\u0199\3\2\2\2\u01a0\u019a\3\2\2\2\u01a1\u0082\3\2"+
		"\2\2\u01a2\u01a6\t\5\2\2\u01a3\u01a5\t\6\2\2\u01a4\u01a3\3\2\2\2\u01a5"+
		"\u01a8\3\2\2\2\u01a6\u01a4\3\2\2\2\u01a6\u01a7\3\2\2\2\u01a7\u01b0\3\2"+
		"\2\2\u01a8\u01a6\3\2\2\2\u01a9\u01ab\t\7\2\2\u01aa\u01ac\t\6\2\2\u01ab"+
		"\u01aa\3\2\2\2\u01ac\u01ad\3\2\2\2\u01ad\u01ab\3\2\2\2\u01ad\u01ae\3\2"+
		"\2\2\u01ae\u01b0\3\2\2\2\u01af\u01a2\3\2\2\2\u01af\u01a9\3\2\2\2\u01b0"+
		"\u0084\3\2\2\2\u01b1\u01b2\7\61\2\2\u01b2\u01b3\7\61\2\2\u01b3\u01b4\7"+
		"\61\2\2\u01b4\u01b8\3\2\2\2\u01b5\u01b7\13\2\2\2\u01b6\u01b5\3\2\2\2\u01b7"+
		"\u01ba\3\2\2\2\u01b8\u01b9\3\2\2\2\u01b8\u01b6\3\2\2\2\u01b9\u01bb\3\2"+
		"\2\2\u01ba\u01b8\3\2\2\2\u01bb\u01bc\7\f\2\2\u01bc\u0086\3\2\2\2\u01bd"+
		"\u01be\7\61\2\2\u01be\u01bf\7\61\2\2\u01bf\u01c3\3\2\2\2\u01c0\u01c2\13"+
		"\2\2\2\u01c1\u01c0\3\2\2\2\u01c2\u01c5\3\2\2\2\u01c3\u01c4\3\2\2\2\u01c3"+
		"\u01c1\3\2\2\2\u01c4\u01c6\3\2\2\2\u01c5\u01c3\3\2\2\2\u01c6\u01c7\7\f"+
		"\2\2\u01c7\u01c8\3\2\2\2\u01c8\u01c9\bD\2\2\u01c9\u0088\3\2\2\2\u01ca"+
		"\u01cb\7\61\2\2\u01cb\u01cc\7,\2\2\u01cc\u01d0\3\2\2\2\u01cd\u01cf\13"+
		"\2\2\2\u01ce\u01cd\3\2\2\2\u01cf\u01d2\3\2\2\2\u01d0\u01d1\3\2\2\2\u01d0"+
		"\u01ce\3\2\2\2\u01d1\u01d3\3\2\2\2\u01d2\u01d0\3\2\2\2\u01d3\u01d4\7,"+
		"\2\2\u01d4\u01d5\7\61\2\2\u01d5\u01d6\3\2\2\2\u01d6\u01d7\bE\2\2\u01d7"+
		"\u008a\3\2\2\2\u01d8\u01da\t\b\2\2\u01d9\u01d8\3\2\2\2\u01da\u01db\3\2"+
		"\2\2\u01db\u01d9\3\2\2\2\u01db\u01dc\3\2\2\2\u01dc\u01dd\3\2\2\2\u01dd"+
		"\u01de\bF\2\2\u01de\u008c\3\2\2\2\22\2\u012b\u0139\u0140\u0142\u014c\u014e"+
		"\u0151\u01a0\u01a6\u01ad\u01af\u01b8\u01c3\u01d0\u01db\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}